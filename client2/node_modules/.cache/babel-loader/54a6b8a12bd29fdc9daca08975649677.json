{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst CountingRows = () => {\n  _s();\n\n  const products = [{\n    trade_id: \"1\",\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }, {\n    trade_id: 1,\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }];\n  const [data, setData] = useState(products);\n  const [pageIsLoad, setPageIsLoad] = useState(0);\n\n  const getData = () => {\n    fetch(\"/selectTr\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      let d = CountingRows(data); // setRows(d)\n\n      setPageIsLoad(true);\n      setData(d); // setCountRow(data.length)\n      // console.log(\"countRow=>\"+countRow)\n    });\n  };\n\n  function CountingRows(data) {\n    let rows = []; // Check first direction\n\n    if (data.end[0].direction === \"B\") {\n      rows.push(data.end[0]);\n    } else {\n      data.end[0].quantity = 0 - parseInt(data.end[0].quantity);\n      rows.push(data.end[0]);\n    }\n\n    data.end.shift();\n    let j = 0; // Count quantity \n\n    data.end.forEach((element, index) => {\n      if (rows[j].client === element.client && rows[j].instrument === element.instrument) {\n        if (element.direction === \"B\") {\n          rows[j].quantity += parseInt(element.quantity);\n        } else {\n          rows[j].quantity -= parseInt(element.quantity);\n        }\n      } else {\n        if (element.direction === \"B\") {\n          rows.push(element);\n        } else {\n          element.quantity = 0 - parseInt(element.quantity);\n          rows.push(element);\n        }\n\n        j++;\n      }\n    });\n    return rows;\n  }\n\n  return [{\n    data,\n    pageIsLoad,\n    setPageIsLoad,\n    setData\n  }, getData, CountingRows];\n};\n\n_s(CountingRows, \"pwBY3YiI7/7yu058Gr4VK3hwYsY=\");\n\n_c = CountingRows;\nexport default CountingRows;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountingRows\");","map":{"version":3,"sources":["C:/Python/Project 1/client/src/components/countRows/CountingRows.js"],"names":["useState","CountingRows","products","trade_id","client","instrument","quantity","direction","data","setData","pageIsLoad","setPageIsLoad","getData","fetch","method","then","res","json","d","rows","end","push","parseInt","shift","j","forEach","element","index"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nconst CountingRows = ()=>{\r\n    const products = [\r\n        {trade_id: \"1\", client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n        {trade_id: 1, client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n    ];\r\n    const [data,setData] = useState(products)\r\n    const [pageIsLoad,setPageIsLoad]= useState(0)   \r\n    \r\n    const getData=()=>{\r\n        fetch(\"/selectTr\",{\r\n            method:\"GET\",\r\n            \r\n        }).then(\r\n            res=>res.json()\r\n        ).then(data=>{\r\n            \r\n            let d = CountingRows(data)\r\n            // setRows(d)\r\n            setPageIsLoad(true)\r\n            setData(d)\r\n\r\n            // setCountRow(data.length)\r\n            // console.log(\"countRow=>\"+countRow)\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    function CountingRows(data){\r\n        let rows = [];\r\n            // Check first direction\r\n        if (data.end[0].direction===\"B\"){\r\n            rows.push(data.end[0])\r\n        }\r\n        else{\r\n            data.end[0].quantity=0-parseInt(data.end[0].quantity)\r\n            rows.push(data.end[0])\r\n        }\r\n        \r\n        data.end.shift()\r\n        let j = 0;\r\n        \r\n            // Count quantity \r\n        data.end.forEach((element,index)=>{\r\n            if(rows[j].client === element.client && rows[j].instrument === element.instrument){\r\n                if (element.direction===\"B\"){\r\n                    rows[j].quantity+=parseInt(element.quantity)\r\n                }\r\n                else{\r\n                    rows[j].quantity-=parseInt(element.quantity)\r\n                }\r\n            }else{\r\n                if (element.direction===\"B\"){\r\n                    rows.push(element)\r\n                }\r\n                else{\r\n                    element.quantity=0-parseInt(element.quantity)\r\n                    rows.push(element)\r\n                }\r\n                j++;\r\n    \r\n            }\r\n        })\r\n        return rows   \r\n    }\r\n    \r\n    return [{data,pageIsLoad,setPageIsLoad,setData},getData,CountingRows]\r\n\r\n   \r\n}\r\n    \r\n\r\nexport default CountingRows"]},"metadata":{},"sourceType":"module"}