{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\Project 1\\\\client\\\\src\\\\components\\\\trader.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TableTr from \"./TableTr\";\nimport Seacrh from \"./seacrh/search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Trader = () => {\n  _s();\n\n  const products = [{\n    trade_id: \"1\",\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }, {\n    trade_id: 1,\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }];\n  const [data, setData] = useState(products);\n  const [pageIsLoud, setPageIsLoud] = useState(0);\n  let rows;\n  useEffect(() => {\n    fetch(\"/selectTr\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setData(data.end);\n      setPageIsLoud(true);\n    });\n  }, []);\n  const [searchValue, setSearchValue] = useState();\n\n  const onSearchValue = () => {\n    if (!searchValue) {\n      return data;\n    }\n\n    let dd = data.filter( // el.quantity.toString().includes(searchValue)\n    el => {\n      return el.client.includes(searchValue) || el.instrument.includes(searchValue) || el.direction.includes(searchValue) || el.quantity.toString().includes(searchValue);\n    });\n    return dd;\n  };\n\n  let filterData = onSearchValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pageIsLoud ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-div\",\n        children: [/*#__PURE__*/_jsxDEV(Seacrh, {\n          searchValue: searchValue,\n          setSearchValue: setSearchValue,\n          onSearchValue: onSearchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableTr, {\n          data: filterData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : \"\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this) // <Table data={data}/>\n  ;\n};\n\n_s(Trader, \"5AvLr7Qh+zGJlR5R/R76KX8Q2CY=\");\n\n_c = Trader;\nexport default Trader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trader\");","map":{"version":3,"sources":["C:/Python/Project 1/client/src/components/trader.jsx"],"names":["React","useState","useEffect","TableTr","Seacrh","Trader","products","trade_id","client","instrument","quantity","direction","data","setData","pageIsLoud","setPageIsLoud","rows","fetch","method","then","res","json","console","log","end","searchValue","setSearchValue","onSearchValue","dd","filter","el","includes","toString","filterData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;;AAIA,MAAMC,MAAM,GAAG,MAAI;AAAA;;AACf,QAAMC,QAAQ,GAAG,CACb;AAACC,IAAAA,QAAQ,EAAE,GAAX;AAAgBC,IAAAA,MAAM,EAAE,OAAxB;AAAgCC,IAAAA,UAAU,EAAE,gBAA5C;AAA6DC,IAAAA,QAAQ,EAAC,QAAtE;AAA+EC,IAAAA,SAAS,EAAC;AAAzF,GADa,EAEb;AAACJ,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,MAAM,EAAE,OAAtB;AAA8BC,IAAAA,UAAU,EAAE,gBAA1C;AAA2DC,IAAAA,QAAQ,EAAC,QAApE;AAA6EC,IAAAA,SAAS,EAAC;AAAvF,GAFa,CAAjB;AAIA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAACK,QAAD,CAA/B;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA6Bd,QAAQ,CAAC,CAAD,CAA3C;AAEA,MAAIe,IAAJ;AAEAd,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,KAAK,CAAC,WAAD,EAAa;AACdC,MAAAA,MAAM,EAAC;AADO,KAAb,CAAL,CAGGC,IAHH,CAIIC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJT,EAKEF,IALF,CAKOP,IAAI,IAAE;AACTU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAGAC,MAAAA,OAAO,CAACD,IAAI,CAACY,GAAN,CAAP;AACAT,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAXD;AAYH,GAbQ,EAaP,EAbO,CAAT;AAcA,QAAM,CAACU,WAAD,EAAaC,cAAb,IAA+BzB,QAAQ,EAA7C;;AAEA,QAAM0B,aAAa,GAAG,MAAK;AACvB,QAAG,CAACF,WAAJ,EAAgB;AACZ,aAAOb,IAAP;AACH;;AAED,QAAIgB,EAAE,GAAGhB,IAAI,CAACiB,MAAL,EAEL;AACAC,IAAAA,EAAE,IAAE;AACA,aAAOA,EAAE,CAACtB,MAAH,CAAUuB,QAAV,CAAmBN,WAAnB,KACHK,EAAE,CAACrB,UAAH,CAAcsB,QAAd,CAAuBN,WAAvB,CADG,IAEHK,EAAE,CAACnB,SAAH,CAAaoB,QAAb,CAAsBN,WAAtB,CAFG,IAGHK,EAAE,CAACpB,QAAH,CAAYsB,QAAZ,GAAuBD,QAAvB,CAAgCN,WAAhC,CAHJ;AAIH,KARI,CAAT;AAWA,WAAOG,EAAP;AACH,GAjBD;;AAmBA,MAAIK,UAAU,GAAGN,aAAa,EAA9B;AACA,sBACI;AAAA,2BACA;AAAA,gBAEIb,UAAU,gBACV;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEI,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAEW,WAArB;AAAkC,UAAA,cAAc,EAAEC,cAAlD;AAAkE,UAAA,aAAa,EAAEC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEM;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,GAQT;AAVL;AADA;AAAA;AAAA;AAAA;AAAA,UADJ,CAgBI;AAhBJ;AAkBH,CAhED;;GAAM5B,M;;KAAAA,M;AAkEN,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport TableTr from \"./TableTr\";\r\nimport Seacrh from \"./seacrh/search\"\r\n\r\n\r\n\r\nconst Trader = ()=>{\r\n    const products = [\r\n        {trade_id: \"1\", client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n        {trade_id: 1, client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n    ];\r\n    const [data,setData] = useState(products)\r\n    const [pageIsLoud,setPageIsLoud] = useState(0)\r\n   \r\n    let rows;\r\n\r\n    useEffect(()=>{\r\n        fetch(\"/selectTr\",{\r\n            method:\"GET\",\r\n            \r\n        }).then(\r\n            res=>res.json()\r\n        ).then(data=>{\r\n            console.log(data)\r\n           \r\n            \r\n            setData(data.end)\r\n            setPageIsLoud(true)\r\n        })\r\n    },[])\r\n    const [searchValue,setSearchValue] = useState()\r\n\r\n    const onSearchValue = () =>{\r\n        if(!searchValue){\r\n            return data\r\n        } \r\n\r\n        let dd = data.filter(\r\n             \r\n            // el.quantity.toString().includes(searchValue)\r\n            el=>{\r\n                return el.client.includes(searchValue) \r\n                ||  el.instrument.includes(searchValue)\r\n                ||  el.direction.includes(searchValue)\r\n                ||  el.quantity.toString().includes(searchValue)\r\n            }\r\n\r\n        )\r\n        return dd\r\n    }\r\n    \r\n    let filterData = onSearchValue()\r\n    return (\r\n        <div>\r\n        <>\r\n        {\r\n            pageIsLoud?\r\n            <div className=\"table-div\">\r\n     \r\n                <Seacrh searchValue={searchValue} setSearchValue={setSearchValue} onSearchValue={onSearchValue}/>\r\n                <TableTr data={filterData}/>\r\n                \r\n      \r\n            </div>\r\n            :\"\"\r\n        }  \r\n          </>\r\n        </div>\r\n        // <Table data={data}/>\r\n   )\r\n}\r\n\r\nexport default Trader"]},"metadata":{},"sourceType":"module"}