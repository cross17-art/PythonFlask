{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\Project 1\\\\client\\\\src\\\\components\\\\position.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TableTr from \"./TableTr\";\nimport CountingRows from \"./countRows/CountingRows\";\nimport Pagination from \"react-js-pagination\";\nimport PaginatorTr from \"./paginator\";\nimport Seacrh from \"./seacrh/search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"bootstrap-less/bootstrap/bootstrap.less\");\n\nconst Position = () => {\n  _s();\n\n  const products = [{\n    trade_id: \"1\",\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }, {\n    trade_id: 1,\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }]; // const [data,setData] = useState(products)\n  // const [row,setRows] = useState()\n  // const [pageIsLoad,setPageIsLoad]= useState(0)   \n\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [{\n    limitCountPage,\n    pages,\n    setPages,\n    trades,\n    pageIsLoad,\n    setPageIsLoad,\n    setTrades,\n    countPage,\n    setCountPage,\n    countRow,\n    setCountRow\n  }, CountingRowsByData] = CountingRows(\"url\"); // const [countRow,setCountRow]=useState(2)\n  // const limitCountPage =20;\n\n  let CP;\n  const [searchValue, setSearchValue] = useState();\n\n  const currentPage = pg => {\n    setCurrentPageNumber(pg);\n  };\n\n  const onSearchValue = () => {\n    if (!searchValue) {\n      return trades;\n    }\n\n    return trades.filter( // el.client.includes(searchValue) \n    //    ||  el.instrument.includes(searchValue)\n    //    || \n    // el.quantity.toString().includes(searchValue)\n    el => {\n      let stingQuantity = el.quantity.toString();\n      return stingQuantity.includes(searchValue.toString());\n    });\n  };\n\n  const filterData = onSearchValue();\n  const lastBlockRow = limitCountPage * currentPageNumber; // console.log(\"lastBlockRow\",lastBlockRow)\n\n  const firstBlockRow = lastBlockRow - limitCountPage + 1;\n  const currentBlockRows = filterData.slice(firstBlockRow, lastBlockRow); // console.log(currentBlockRows)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pageIsLoad ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div\",\n      children: [/*#__PURE__*/_jsxDEV(Seacrh, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue,\n        onSearchValue: onSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableTr, {\n        data: currentBlockRows,\n        direction: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PaginatorTr, {\n        pages: pages,\n        currentPage: currentPage,\n        currentPageNumber: currentPageNumber,\n        direction: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Position, \"kEs3cbLBfbYlbLzY7oY+nDtRqfE=\");\n\n_c = Position;\nexport default Position;\n\nvar _c;\n\n$RefreshReg$(_c, \"Position\");","map":{"version":3,"sources":["C:/Python/Project 1/client/src/components/position.jsx"],"names":["React","useState","useEffect","TableTr","CountingRows","Pagination","PaginatorTr","Seacrh","require","Position","products","trade_id","client","instrument","quantity","direction","currentPageNumber","setCurrentPageNumber","limitCountPage","pages","setPages","trades","pageIsLoad","setPageIsLoad","setTrades","countPage","setCountPage","countRow","setCountRow","CountingRowsByData","CP","searchValue","setSearchValue","currentPage","pg","onSearchValue","filter","el","stingQuantity","toString","includes","filterData","lastBlockRow","firstBlockRow","currentBlockRows","slice"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport TableTr from \"./TableTr\";\r\nimport CountingRows from \"./countRows/CountingRows\"\r\nimport Pagination from \"react-js-pagination\";\r\nimport PaginatorTr from \"./paginator\";\r\nimport Seacrh from \"./seacrh/search\"\r\n    \r\nrequire(\"bootstrap-less/bootstrap/bootstrap.less\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Position = ()=>{\r\n    const products = [\r\n        {trade_id: \"1\", client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n        {trade_id: 1, client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n    ];\r\n    // const [data,setData] = useState(products)\r\n    // const [row,setRows] = useState()\r\n    // const [pageIsLoad,setPageIsLoad]= useState(0)   \r\n    const [currentPageNumber,setCurrentPageNumber] = useState(1);\r\n    const [{limitCountPage,pages,setPages,trades,pageIsLoad,setPageIsLoad,setTrades,countPage,setCountPage,countRow,setCountRow},CountingRowsByData] = CountingRows(\"url\"); \r\n    // const [countRow,setCountRow]=useState(2)\r\n    // const limitCountPage =20;\r\n    let CP;\r\n\r\n    const [searchValue,setSearchValue] = useState()\r\n\r\n\r\n\r\n    const currentPage =(pg)=>{\r\n        setCurrentPageNumber(pg)    \r\n     \r\n    }\r\n\r\n    \r\n    const onSearchValue = () =>{\r\n        if(!searchValue){\r\n            return trades\r\n        } \r\n\r\n        return trades.filter(\r\n            // el.client.includes(searchValue) \r\n            //    ||  el.instrument.includes(searchValue)\r\n            //    || \r\n            // el.quantity.toString().includes(searchValue)\r\n            el=>{\r\n                let stingQuantity =el.quantity.toString() \r\n                return stingQuantity.includes(searchValue.toString())\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    const filterData = onSearchValue()\r\n    const lastBlockRow = limitCountPage * currentPageNumber;\r\n    // console.log(\"lastBlockRow\",lastBlockRow)\r\n    const firstBlockRow = lastBlockRow-limitCountPage+1; \r\n    const currentBlockRows = filterData.slice(firstBlockRow,lastBlockRow)\r\n\r\n    // console.log(currentBlockRows)\r\n\r\n   \r\n    return (\r\n    \r\n    <div>\r\n      {\r\n          pageIsLoad?\r\n          <div className=\"table-div\">\r\n            <Seacrh searchValue={searchValue} setSearchValue={setSearchValue} onSearchValue={onSearchValue}/>\r\n\r\n            <TableTr data={currentBlockRows} direction=\"true\"/>\r\n           \r\n            <PaginatorTr pages={pages} currentPage={currentPage} currentPageNumber={currentPageNumber} direction=\"true\"/>\r\n          </div>\r\n\r\n          :\"\"\r\n      }\r\n\r\n    </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Position"]},"metadata":{},"sourceType":"module"}