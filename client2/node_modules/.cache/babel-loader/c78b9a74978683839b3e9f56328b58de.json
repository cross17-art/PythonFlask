{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\Project 1\\\\client\\\\src\\\\components\\\\position.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TableTr from \"./TableTr\";\nimport CountingRows from \"./countRows/CountingRows\";\nimport Pagination from \"react-js-pagination\";\nimport PaginatorTr from \"./paginator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"bootstrap-less/bootstrap/bootstrap.less\");\n\nconst Position = () => {\n  _s();\n\n  const products = [{\n    trade_id: \"1\",\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }, {\n    trade_id: 1,\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }]; // const [data,setData] = useState(products)\n  // const [row,setRows] = useState()\n  // const [pageIsLoad,setPageIsLoad]= useState(0)   \n\n  const [currentPageNumber, setCurrentPageNumber] = useState(null);\n  const [{\n    limitCountPage,\n    pages,\n    setPages,\n    trades,\n    pageIsLoad,\n    setPageIsLoad,\n    setTrades,\n    countPage,\n    setCountPage,\n    countRow,\n    setCountRow\n  }, CountingRowsByData] = CountingRows(\"url\"); // const [countRow,setCountRow]=useState(2)\n  // const limitCountPage =20;\n\n  let CP;\n  useEffect(() => {\n    // console.log(countRow)\n    if (!pageIsLoad) {\n      return;\n    } // // console.log(row.lenght); \n    // let size=data.length\n    // setCountRow(size)\n    // let pages =  countRow / limitCountPage\n\n\n    console.log(\"count rows\", countRow);\n    console.log(\"count pages\", countPage);\n    console.log(pages); // ii(pages)\n  }, [pages]);\n\n  const currentPage = pg => {\n    setCurrentPageNumber(pg);\n  };\n\n  const lastBlockRow = limitCountPage * currentPage;\n  const firstBlockRow = lastBlockRow - limitCountPage + 1;\n  const currentBlockRows = trades.slice(firstBlockRow, lastBlockRow);\n  useEffect(() => {\n    console.log(\"currentPage:\", currentPageNumber);\n  }, [currentPageNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div\",\n      children: /*#__PURE__*/_jsxDEV(TableTr, {\n        data: currentBlockRows,\n        direction: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PaginatorTr, {\n      pages: pages,\n      currentPage: currentPage,\n      direction: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Position, \"+Z79z6Ke5QG0rCXul8NutK+exw4=\");\n\n_c = Position;\nexport default Position;\n\nvar _c;\n\n$RefreshReg$(_c, \"Position\");","map":{"version":3,"sources":["C:/Python/Project 1/client/src/components/position.jsx"],"names":["React","useState","useEffect","TableTr","CountingRows","Pagination","PaginatorTr","require","Position","products","trade_id","client","instrument","quantity","direction","currentPageNumber","setCurrentPageNumber","limitCountPage","pages","setPages","trades","pageIsLoad","setPageIsLoad","setTrades","countPage","setCountPage","countRow","setCountRow","CountingRowsByData","CP","console","log","currentPage","pg","lastBlockRow","firstBlockRow","currentBlockRows","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;;AAEAC,OAAO,CAAC,yCAAD,CAAP;;AAOA,MAAMC,QAAQ,GAAG,MAAI;AAAA;;AACjB,QAAMC,QAAQ,GAAG,CACb;AAACC,IAAAA,QAAQ,EAAE,GAAX;AAAgBC,IAAAA,MAAM,EAAE,OAAxB;AAAgCC,IAAAA,UAAU,EAAE,gBAA5C;AAA6DC,IAAAA,QAAQ,EAAC,QAAtE;AAA+EC,IAAAA,SAAS,EAAC;AAAzF,GADa,EAEb;AAACJ,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,MAAM,EAAE,OAAtB;AAA8BC,IAAAA,UAAU,EAAE,gBAA1C;AAA2DC,IAAAA,QAAQ,EAAC,QAApE;AAA6EC,IAAAA,SAAS,EAAC;AAAvF,GAFa,CAAjB,CADiB,CAKjB;AACA;AACA;;AACA,QAAM,CAACC,iBAAD,EAAmBC,oBAAnB,IAA2Cf,QAAQ,CAAC,IAAD,CAAzD;AACA,QAAM,CAAC;AAACgB,IAAAA,cAAD;AAAgBC,IAAAA,KAAhB;AAAsBC,IAAAA,QAAtB;AAA+BC,IAAAA,MAA/B;AAAsCC,IAAAA,UAAtC;AAAiDC,IAAAA,aAAjD;AAA+DC,IAAAA,SAA/D;AAAyEC,IAAAA,SAAzE;AAAmFC,IAAAA,YAAnF;AAAgGC,IAAAA,QAAhG;AAAyGC,IAAAA;AAAzG,GAAD,EAAuHC,kBAAvH,IAA6IxB,YAAY,CAAC,KAAD,CAA/J,CATiB,CAUjB;AACA;;AACA,MAAIyB,EAAJ;AAGA3B,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,QAAG,CAACmB,UAAJ,EAAe;AACX;AACH,KAJS,CAKV;AACA;AACA;AACA;;;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBL,QAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BP,SAA1B;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAZU,CAcV;AACH,GAfQ,EAeP,CAACA,KAAD,CAfO,CAAT;;AAiBA,QAAMc,WAAW,GAAGC,EAAD,IAAM;AACrBjB,IAAAA,oBAAoB,CAACiB,EAAD,CAApB;AAGH,GAJD;;AAMA,QAAMC,YAAY,GAAGjB,cAAc,GAAGe,WAAtC;AACA,QAAMG,aAAa,GAAGD,YAAY,GAACjB,cAAb,GAA4B,CAAlD;AACA,QAAMmB,gBAAgB,GAAGhB,MAAM,CAACiB,KAAP,CAAaF,aAAb,EAA2BD,YAA3B,CAAzB;AAEAhC,EAAAA,SAAS,CAAC,MAAI;AACV4B,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BhB,iBAA3B;AACH,GAFQ,EAEP,CAACA,iBAAD,CAFO,CAAT;AAMA,sBACA;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEqB,gBAAf;AAAiC,QAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAElB,KAApB;AAA2B,MAAA,WAAW,EAAEc,WAAxC;AAAqD,MAAA,SAAS,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CA3DD;;GAAMxB,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport TableTr from \"./TableTr\";\r\nimport CountingRows from \"./countRows/CountingRows\"\r\nimport Pagination from \"react-js-pagination\";\r\nimport PaginatorTr from \"./paginator\";\r\n\r\nrequire(\"bootstrap-less/bootstrap/bootstrap.less\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Position = ()=>{\r\n    const products = [\r\n        {trade_id: \"1\", client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n        {trade_id: 1, client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n    ];\r\n    // const [data,setData] = useState(products)\r\n    // const [row,setRows] = useState()\r\n    // const [pageIsLoad,setPageIsLoad]= useState(0)   \r\n    const [currentPageNumber,setCurrentPageNumber] = useState(null);\r\n    const [{limitCountPage,pages,setPages,trades,pageIsLoad,setPageIsLoad,setTrades,countPage,setCountPage,countRow,setCountRow},CountingRowsByData] = CountingRows(\"url\"); \r\n    // const [countRow,setCountRow]=useState(2)\r\n    // const limitCountPage =20;\r\n    let CP;\r\n\r\n   \r\n    useEffect(()=>{\r\n        // console.log(countRow)\r\n        if(!pageIsLoad){\r\n            return\r\n        }\r\n        // // console.log(row.lenght); \r\n        // let size=data.length\r\n        // setCountRow(size)\r\n        // let pages =  countRow / limitCountPage\r\n        console.log(\"count rows\",countRow)\r\n        console.log(\"count pages\",countPage)\r\n       \r\n        console.log(pages)\r\n      \r\n        // ii(pages)\r\n    },[pages])\r\n\r\n    const currentPage =(pg)=>{\r\n        setCurrentPageNumber(pg)\r\n     \r\n     \r\n    }\r\n\r\n    const lastBlockRow = limitCountPage * currentPage;\r\n    const firstBlockRow = lastBlockRow-limitCountPage+1; \r\n    const currentBlockRows = trades.slice(firstBlockRow,lastBlockRow)\r\n\r\n    useEffect(()=>{\r\n        console.log(\"currentPage:\",currentPageNumber)\r\n    },[currentPageNumber])\r\n    \r\n   \r\n\r\n    return (\r\n    <div>\r\n        <div className=\"table-div\">\r\n            <TableTr data={currentBlockRows} direction=\"true\"/>\r\n         \r\n        </div>\r\n        <PaginatorTr pages={pages} currentPage={currentPage} direction=\"true\"/>\r\n\r\n    </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Position"]},"metadata":{},"sourceType":"module"}