{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\Project 1\\\\client\\\\src\\\\components\\\\homepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [csvfile, setSCV] = useState();\n  const [textFile, setTextFile] = useState(\"Click by me\");\n  const [ValidFile, setValidFile] = useState(0);\n\n  function ver(e) {\n    if (e.target.files[0].type === \"application/vnd.ms-excel\") {\n      console.log(\"Its scv file\");\n      setSCV(e.target.files[0]);\n      setTextFile(\"Successfully uploaded file\");\n      setValidFile(1);\n    } else {\n      console.log(\"Its not scv file\");\n      setTextFile(\"The file type does not correspond to reality\");\n      setValidFile(0);\n    }\n  }\n\n  const SendRequest = () => {\n    console.log(\"send requset \");\n  }; // (e)=>{setSCV(e.target.files[0])}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    id: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"black\"\n          },\n          children: \"You need to uploud file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        type: \"file\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploud-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-file\",\n            type: \"file\",\n            accept: \".csv\",\n            id: \"file\",\n            onChange: e => {\n              ver(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), ValidFile ? /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"file\",\n            className: \"success-text\",\n            children: textFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"file\",\n            className: \"\",\n            children: textFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: SendRequest,\n          children: \"Send file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"hnkRed6OKc3yR5fjwQfwmamdkJg=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Python/Project 1/client/src/components/homepage.jsx"],"names":["React","useState","HomePage","csvfile","setSCV","textFile","setTextFile","ValidFile","setValidFile","ver","e","target","files","type","console","log","SendRequest","textAlign","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAIA,MAAMC,QAAQ,GAAG,MAAI;AAAA;;AAEjB,QAAM,CAACC,OAAD,EAASC,MAAT,IAAmBH,QAAQ,EAAjC;AACA,QAAM,CAACI,QAAD,EAAUC,WAAV,IAAwBL,QAAQ,CAAC,aAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;;AAEA,WAASQ,GAAT,CAAcC,CAAd,EAAgB;AACZ,QAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAlB,KAAyB,0BAA5B,EAAuD;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAX,MAAAA,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAN;AACAN,MAAAA,WAAW,CAAC,4BAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,CAAD,CAAZ;AAEH,KAND,MAMK;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAT,MAAAA,WAAW,CAAC,8CAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACH;AACJ;;AAED,QAAMQ,WAAW,GAAG,MAAI;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAFD,CApBiB,CAuBjB;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,EAAxB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,KAAK,EAAE;AAACE,UAAAA,SAAS,EAAC;AAAX,SAAZ;AAAA,+BAAkC;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,MAAM,EAAC,MAAzB;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,IAAI,EAAC,MAAnC;AAA0C,YAAA,MAAM,EAAC,MAAjD;AAAwD,YAAA,EAAE,EAAG,MAA7D;AAAoE,YAAA,QAAQ,EAAGR,CAAD,IAAK;AAACD,cAAAA,GAAG,CAACC,CAAD,CAAH;AAAO;AAA3F;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEIH,SAAS,gBACT;AAAO,YAAA,GAAG,EAAC,MAAX;AAAkB,YAAA,SAAS,EAAC,cAA5B;AAAA,sBAA6CF;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADS,gBAET;AAAO,YAAA,GAAG,EAAC,MAAX;AAAkB,YAAA,SAAS,EAAC,EAA5B;AAAA,sBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAQI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEW,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA1CD;;GAAMd,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React,{useState} from \"react\";\r\n\r\n\r\n\r\nconst HomePage = ()=>{\r\n\r\n    const [csvfile,setSCV] = useState();\r\n    const [textFile,setTextFile] =useState(\"Click by me\");\r\n    const [ValidFile,setValidFile] =useState(0);\r\n\r\n    function ver (e){\r\n        if(e.target.files[0].type===\"application/vnd.ms-excel\"){\r\n            console.log(\"Its scv file\")\r\n            setSCV(e.target.files[0])\r\n            setTextFile(\"Successfully uploaded file\")\r\n            setValidFile(1)\r\n\r\n        }else{\r\n            console.log(\"Its not scv file\")\r\n            setTextFile(\"The file type does not correspond to reality\")\r\n            setValidFile(0)\r\n        }\r\n    }\r\n\r\n    const SendRequest = ()=>{\r\n        console.log(\"send requset \")\r\n    }\r\n    // (e)=>{setSCV(e.target.files[0])}\r\n    return (\r\n        <div className=\"row\" id=\"\">    \r\n            <div className=\"container\">\r\n                <div style={{textAlign:\"center\"}}><h1 style={{color:\"black\"}}>You need to uploud file</h1></div> \r\n                <form type=\"file\" method=\"POST\">\r\n                <div className=\"uploud-file\">\r\n                    <input className=\"input-file\" type=\"file\" accept=\".csv\" id = \"file\" onChange={(e)=>{ver(e)}}></input>\r\n                   {ValidFile?\r\n                    <label for=\"file\" className=\"success-text\" >{textFile}</label>:\r\n                    <label for=\"file\" className=\"\" >{textFile}</label>\r\n                   }\r\n                </div>\r\n                    <button type=\"submit\" onClick={SendRequest}>Send file</button>\r\n                </form>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}