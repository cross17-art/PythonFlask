{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python\\\\Project 1\\\\client\\\\src\\\\components\\\\position.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TableTr from \"./TableTr\";\nimport CountingRows from \"./countRows/CountingRows\";\nimport Pagination from \"react-js-pagination\";\nimport PaginatorTr from \"./paginator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"bootstrap-less/bootstrap/bootstrap.less\");\n\nconst Position = () => {\n  _s();\n\n  const products = [{\n    trade_id: \"1\",\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }, {\n    trade_id: 1,\n    client: 'Shoes',\n    instrument: 'Running Shoes.',\n    quantity: \"asdasd\",\n    direction: \"asdasd\"\n  }]; // const [data,setData] = useState(products)\n  // const [row,setRows] = useState()\n  // const [pageIsLoad,setPageIsLoad]= useState(0)   \n\n  const [{\n    trades,\n    pageIsLoad,\n    setPageIsLoad,\n    setTrades,\n    countPage,\n    setCountPage,\n    countRow,\n    setCountRow\n  }, getData, CountingRowsByData] = CountingRows(\"url\"); // const [countRow,setCountRow]=useState(2)\n  // const limitCountPage =20;\n\n  useEffect(() => {\n    // console.log(countRow)\n    if (!pageIsLoad) {\n      return;\n    } // // console.log(row.lenght); \n    // let size=data.length\n    // setCountRow(size)\n    // let pages =  countRow / limitCountPage\n\n\n    console.log(\"count rows\", countRow);\n    console.log(\"count pages\", countPage); // ii(pages)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div\",\n      children: /*#__PURE__*/_jsxDEV(TableTr, {\n        data: trades,\n        direction: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PaginatorTr, {\n      data: countPage,\n      direction: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Position, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Position;\nexport default Position;\n\nvar _c;\n\n$RefreshReg$(_c, \"Position\");","map":{"version":3,"sources":["C:/Python/Project 1/client/src/components/position.jsx"],"names":["React","useState","useEffect","TableTr","CountingRows","Pagination","PaginatorTr","require","Position","products","trade_id","client","instrument","quantity","direction","trades","pageIsLoad","setPageIsLoad","setTrades","countPage","setCountPage","countRow","setCountRow","getData","CountingRowsByData","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;;AAEAC,OAAO,CAAC,yCAAD,CAAP;;AAOA,MAAMC,QAAQ,GAAG,MAAI;AAAA;;AACjB,QAAMC,QAAQ,GAAG,CACb;AAACC,IAAAA,QAAQ,EAAE,GAAX;AAAgBC,IAAAA,MAAM,EAAE,OAAxB;AAAgCC,IAAAA,UAAU,EAAE,gBAA5C;AAA6DC,IAAAA,QAAQ,EAAC,QAAtE;AAA+EC,IAAAA,SAAS,EAAC;AAAzF,GADa,EAEb;AAACJ,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,MAAM,EAAE,OAAtB;AAA8BC,IAAAA,UAAU,EAAE,gBAA1C;AAA2DC,IAAAA,QAAQ,EAAC,QAApE;AAA6EC,IAAAA,SAAS,EAAC;AAAvF,GAFa,CAAjB,CADiB,CAKjB;AACA;AACA;;AAGA,QAAM,CAAC;AAACC,IAAAA,MAAD;AAAQC,IAAAA,UAAR;AAAmBC,IAAAA,aAAnB;AAAiCC,IAAAA,SAAjC;AAA2CC,IAAAA,SAA3C;AAAqDC,IAAAA,YAArD;AAAkEC,IAAAA,QAAlE;AAA2EC,IAAAA;AAA3E,GAAD,EAAyFC,OAAzF,EAAiGC,kBAAjG,IAAuHpB,YAAY,CAAC,KAAD,CAAzI,CAViB,CAWjB;AACA;;AAIAF,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,QAAG,CAACc,UAAJ,EAAe;AACX;AACH,KAJS,CAKV;AACA;AACA;AACA;;;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBL,QAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BP,SAA1B,EAVU,CAWV;AACH,GAZQ,CAAT;AAgBA,sBACA;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEJ,MAAf;AAAuB,QAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEI,SAAnB;AAA8B,MAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUH,CA1CD;;GAAMX,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport TableTr from \"./TableTr\";\r\nimport CountingRows from \"./countRows/CountingRows\"\r\nimport Pagination from \"react-js-pagination\";\r\nimport PaginatorTr from \"./paginator\";\r\n\r\nrequire(\"bootstrap-less/bootstrap/bootstrap.less\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Position = ()=>{\r\n    const products = [\r\n        {trade_id: \"1\", client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n        {trade_id: 1, client: 'Shoes',instrument: 'Running Shoes.',quantity:\"asdasd\",direction:\"asdasd\" },\r\n    ];\r\n    // const [data,setData] = useState(products)\r\n    // const [row,setRows] = useState()\r\n    // const [pageIsLoad,setPageIsLoad]= useState(0)   \r\n    \r\n\r\n    const [{trades,pageIsLoad,setPageIsLoad,setTrades,countPage,setCountPage,countRow,setCountRow},getData,CountingRowsByData] = CountingRows(\"url\"); \r\n    // const [countRow,setCountRow]=useState(2)\r\n    // const limitCountPage =20;\r\n    \r\n\r\n    \r\n    useEffect(()=>{\r\n        // console.log(countRow)\r\n        if(!pageIsLoad){\r\n            return\r\n        }\r\n        // // console.log(row.lenght); \r\n        // let size=data.length\r\n        // setCountRow(size)\r\n        // let pages =  countRow / limitCountPage\r\n        console.log(\"count rows\",countRow)\r\n        console.log(\"count pages\",countPage)\r\n        // ii(pages)\r\n    })\r\n\r\n   \r\n\r\n    return (\r\n    <div>\r\n        <div className=\"table-div\">\r\n            <TableTr data={trades} direction=\"true\"/>\r\n         \r\n        </div>\r\n        <PaginatorTr data={countPage} direction=\"true\"/>\r\n    </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Position"]},"metadata":{},"sourceType":"module"}